# Logging
quarkus.log.category."io.arrogantprogrammer.rest".level=INFO
quarkus.log.category."io.arrogantprogrammer.ai".level=DEBUG

# Mailer
%dev.quarkus.mailer.mock=false

# Hibernate
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.log.bind-params=true

# REST
quarkus.rest.path=/api

#Quinoa
quarkus.quinoa.enable-spa-routing=true
quarkus.quinoa.package-manager-install=true
quarkus.quinoa.package-manager-install.node-version=20.10.0
quarkus.quinoa.dev-server.port=3000
quarkus.quinoa.build-dir=dist

# HTTP
## CORS
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:3000
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=Content-Type,Authorization
quarkus.http.cors.exposed-headers=Content-Type,Authorization
quarkus.http.cors.access-control-max-age=24H

# LangChain4J
## Enable logging of both requests and responses
quarkus.langchain4j.openai.log-requests=true
quarkus.langchain4j.openai.log-responses=true
## Set timeout to 3 minutes
quarkus.langchain4j.openai.timeout=180s

# Instructlab
#quarkus.langchain4j.openai.base-url=http://localhost:60235/v1
# Configure openai server to use a specific model
#quarkus.langchain4j.openai.chat-model.model-name=instructlab/granite-7b-lab-GGUF
# Set timeout to 3 minutes

# ChatGPT
quarkus.langchain4j.openai.api-key=${CHATGPT_KEY}
%test.quarkus.langchain4j.openai.api-key=ts-test-YqUDkzuq1cBHCqL1icAuA6jpvc54izWOeQzu5rE18RKD_bzz-CzzQTd5tUoOq609fuDlhr_4NtT9AlbkIJ3rqz61gf0tv5Wc4Y14NW1MvubrO-2ucp$HHre397nMpEWV6yxPcMdkWJApwo5hgyI972wQOgoA
quarkus.langchain4j.openai.chat-model.model-name=gpt-4o
quarkus.langchain4j.openai.chat-model.log-requests=true
quarkus.langchain4j.openai.chat-model.log-responses=true

# Dall-e
quarkus.langchain4j.openai.image-model.enabled=true
quarkus.langchain4j.openai.image-model.model-name=dall-e-3
quarkus.langchain4j.openai.timeout=1m
quarkus.langchain4j.openai.image-model.size=1024x1024
quarkus.langchain4j.openai.image-model.quality=standard
quarkus.langchain4j.openai.image-model.style=vivid

# Easy RAG
quarkus.langchain4j.easy-rag.path=src/main/resources/menus-txt
quarkus.langchain4j.easy-rag.max-segment-size=100
quarkus.langchain4j.easy-rag.max-overlap-size=25
quarkus.langchain4j.easy-rag.max-results=3

# Embeddings
#quarkus.langchain4j.embedding-model.provider=dev.langchain4j.model.embedding.onnx.bgesmallenq.BgeSmallEnQuantizedEmbeddingModel
#quarkus.langchain4j.pgvector.dimension=384
